function Piece(e){var t=function(){return e.getBoundingClientRect()};return{dom:e,top:t().top,left:t().left,right:t().right,bottom:t().bottom,center:{x:(t().right+t().left)/2,y:(t().bottom+t().top)/2}}}var Board=function(){return{pieces:[],getPieces:function(){if(this.pieces.length)return this.pieces;for(var e=document.getElementsByClassName("piece"),t=0;t<e.length;t++)this.pieces.push(Piece(e[t]));return this.pieces},getChosen:function(){return Piece(document.getElementsByClassName("chosen")[0])},getEmpty:function(){return Piece(document.getElementsByClassName("empty")[0])},pieceSide:{top:void 0,left:void 0},getPieceSize:function(e){if(void 0!==this.pieceSide[e])return this.pieceSide[e];for(var t=0,n=this.getPieces(),i=0;i<n.length-1;i++)if(t=Math.abs(n[i][e]-n[i+1][e]),t>0)return this.pieceSide[e]=t,this.pieceSide[e];return 0},getPieceHeight:function(){return this.getPieceSize("top")},getPieceWidth:function(){return this.getPieceSize("left")},getSideBoundary:function(e,t){for(var n=this.getPieces(),i=n[0][e],r=0;r<n.length;r++)t(i,n[r][e])&&(i=n[r][e]);return i},getTopBoundary:function(){return this.getSideBoundary("top",function(e,t){return e>t})},getBottomBoundary:function(){return this.getSideBoundary("bottom",function(e,t){return e<t})},getLeftBoundary:function(){return this.getSideBoundary("left",function(e,t){return e>t})},getRightBoundary:function(){return this.getSideBoundary("right",function(e,t){return e<t})},getPieceOneUp:function(e){var t=e.center.x,n=e.center.y-Board.getPieceHeight();return Piece(document.elementFromPoint(t,n))},getPieceOneDown:function(e){var t=e.center.x,n=e.center.y+Board.getPieceHeight();return Piece(document.elementFromPoint(t,n))},getPieceOneLeft:function(){return Piece(document.elementFromPoint(x,y))},getPieceOneRight:function(){return Piece(document.elementFromPoint(x,y))}}}(),Helpers={fail:function(e){console.error("%c FAIL "+e,"color: red"),alert("FAIL "+e)},pass:function(e){console.log("%c PASS "+e,"color: blue")},expect:function(e,t){t?this.pass(e):this.fail(e)}},RunTests=function(e){console.clear();for(var t in e)e[t](t.toString())},TestPiece={},TestBoard={test_getPieceHeight:function(e){var t=Board.getPieceHeight();Helpers.expect(e+" height is defined",void 0!==t),Helpers.expect(e+" height is greater than 0",t>0)},test_getBoardWidth:function(e){var t=Board.getPieceWidth();Helpers.expect(e+" width is defined",void 0!==t),Helpers.expect(e+" width is greater than 0",t>0)},test_getChosen:function(e){var t=Board.getChosen();Helpers.expect(e,void 0!==t)},test_getEmpty:function(e){var t=Board.getEmpty();Helpers.expect(e,void 0!==t)},test_getTopBoundarygetBottomBoundary:function(e){var t=Board.getTopBoundary(),n=Board.getBottomBoundary();Helpers.expect(e+" top greater than 0",t>0),Helpers.expect(e+" bottom greater than 0",n>0),Helpers.expect(e+" top < bottom",t<n)},test_get_LeftBoundaryget_RightBoundary:function(e){var t=Board.getLeftBoundary(),n=Board.getRightBoundary();Helpers.expect(e+" left greater than 0",t>0),Helpers.expect(e+" right greater than 0",n>0),Helpers.expect(e+" left < right",t<n)},test_getPieceOneUp:function(e){var t=Board.getChosen(),n=Board.getPieceOneUp(t);Helpers.expect(e+" piece is defined",void 0!==n),Helpers.expect(e+" oneUp should be one piece size up from chosen",t.top-Board.getPieceHeight()==n.top),Helpers.expect(e+" oneUp should be same column as chosen",t.left==n.left&&t.right==n.right)}};